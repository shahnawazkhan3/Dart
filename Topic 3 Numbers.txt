==========================Topic 3 Numbers

int    Integer of arbitrary size. The int data type is used to represent whole numbers.

double 64-bit (double-precision) floating-point numbers, as specified by the IEEE 754 standard. The double data type is used to represent fractional numbers


 int num1 = 10;                  
   
   // declare an integer 
   double num2 = 10.50;  
   
   // declare a double value 
   print(num1); 
   print(num2);


print(num.parse('12A')); 
   print(num.parse('AAAA')); 

=========================hashcode Property============


Syntax
num.hashcode
'

void main() { 
   int n = 5000; 
   print(n.hashCode); 
}  


=======================Number isFinite Property============

1) Syntax


num.isFinite

 int n = 5000; 
   print(n.isFinite); 

=======================Number isInFinite Property==============


1) Syntax

num.isInfinite




int n = 5000; 
   print(n.isInfinite); 
False

======================Number sign Property===========


1) Syntax

num.sign

		void main() { 
   int posNum = 10; 
   int negNum = -12;
   int valZero = 0;  
   
   print(posNum.sign); 
   print(negNum.sign); 
   print(valZero.sign); 
			} 


output+ 

1 
=-1 
0

=====================Number isEven Property==========



1) 	Syntax

num.isEven 


  int posNum = 10; 
   print(posNum.isEven);

output 
true 


=======================Number isOdd Property==========


1)	Syntax


num.isOdd


int posNum = 10; 
   print(posNum.isOdd); 

false 


========================== Method & Description================



==========================Abs Method=============


1)	Syntax

Number.abs()


 var a = -2; 
   print(a.abs()); 

out put 
2


=======================ceil Method=========


1)	Syntax

Number.ceil()


void main() { 
   var a = 2.4; 
   print("The ceiling value of 2.4 = ${a.ceil()}"); 
}  

output

The ceiling value of 2.4 = 3 


=====================compareTo Method=========



1)	Syntax

Number.compareTo(x)


Parameter


void main() { 
   var a = 2.4; 
   print(a.compareTo(12)); 
   print(a.compareTo(2.4)); 
   print(a.compareTo(0)); 
} 


=-1 
0 
1



===================floor Method=========

void main() { 
   var a = 2.9; 
   print("The floor value of 2.9 = ${a.floor()}"); 
} 
output 

The floor value of 2.9 = 2



================remainder Method======


void main() { 
   var a = 10; 
   var b = 17; 
   
   print(a.remainder(2)); 
   print(b.remainder(2)); 
}

output 

0 
1



=================round Method=========



void main() { 
   double n1 = 12.023; 
   double n2 = 12.89; 
   
   var value = n1.round(); 
   print( value ); 
   
   value = n2.round(); 
   print( value ); 
} 
output

12 
13

==============toDouble Method========


void main() { 
   int n1 = 2; 
   var value = n1.toDouble(); 
   print("Output = ${value}"); 
} 

output.

Output = 2.0


=======================toInt Method============


void main() { 
   double n1 = 2.0; 
   var value = n1.toInt(); 
   print("Output = ${value}"); 
} 
output

Output = 2


==================toString Method=============


void main() {   
   int n1 = 2;   
   var value = n1.toString();   
   print( value is String ); 
}  
output .

================truncate Method======



void main() { 
   double n1 = 2.123; 
   var value = n1.truncate(); 
   print("The truncated value of 2.123 = ${value}"); 
} 


The truncated value of 2.123 = 2 

true


